## Generated by $ ./gradlew refreshVersionsCatalog

[bundles]


[plugins]

android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
keeper = { id = "com.slack.keeper", version.ref = "keeper_plugin" }
play = { id = "com.github.triplet.play", version.ref = "play_publisher_plugin" }
axion = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion" }
huawei = { id = "ru.cian.huawei-publish-gradle-plugin", version.ref = "huawei_publish_plugin" }
play-services = { id = "com.google.gms.google-services", version.ref = "playservices_plugin" }
firebase_crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
firebase_app_distribution = { id = "com.google.firebase.appdistribution", version.ref = "firebase_appdistribution" }
firebase_performance = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
fladle = { id = "com.osacky.fladle", version.ref = "fladle" }
shot = { id = "shot", version.ref = "shot" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
navigation = { id = "androidx.navigation.safeargs.kotlin", version.ref = "androidx_navigation" }
sonar = { id = "org.sonarqube", version.ref = "sonarqube" }
room = { id = "androidx.room", version.ref = "room" }

veepee_version_manager = { id = "com.veepee.version.manager", version.ref = "veepee_gradle_plugins" }
veepee_code_style = { id = "com.veepee.code.style", version.ref = "veepee_gradle_plugins" }
veepee_sonar = { id = "com.veepee.sonar", version.ref = "veepee_gradle_plugins" }
veepee_jacoco = { id = "com.veepee.jacoco", version.ref = "veepee_gradle_plugins" }
[versions]

# Android
android_material = "1.11.0"
androidx_activity = "1.8.2"
androidx_annotation = "1.7.1"
androidx_appcompat = "1.6.1"
androidx_cardview = "1.0.0"
androidx_constraintlayout = "2.1.4"
androidx_core_ktx = "1.12.0"
androidx_fragment = "1.6.2"
androidx_lifecycle = "2.7.0"
androidx_lifecycle_extensions = "2.2.0"
androidx_recyclerview = "1.3.2"

# Compose
compose = "1.6.0-rc01"
compose_compiler = "1.5.8"
kotlinCollections = "0.3.7"
compose_material = "1.6.0-rc01"
compose_foundation = "1.6.0-rc01"
constraintlayout = "1.0.1"
compose_activity = "1.8.2"
coroutines = "1.7.3"
dagger = "2.50"
okhttp = "4.12.0"
desugarJdkLibs = "2.0.4"

# Plugin
agp = "8.2.1"
kotlin = "1.9.22"
ksp = "1.9.22-1.0.17"
keeper_plugin = "0.15.0"
play_publisher_plugin = "3.8.6"
huawei_publish_plugin = "1.4.2"
axion = "1.16.1"
playservices_plugin = "4.4.0"
crashlytics = "2.9.9"
firebase_appdistribution = "4.0.1"
firebasePerfPlugin = "1.4.2"
fladle = "0.17.4"
shot = "6.0.0"
detekt = "1.23.4"
androidx_navigation = "2.7.6"
sonarqube = "4.4.1.3373"
room = "2.6.1"
veepee_gradle_plugins = "0.1.2"
checkstyle = "10.7.0"
# Test
test_androidx_orchestrator = "1.4.2"
test_androidx_test = "1.5.0"
test_androidx_test_junit = "1.1.5"
test_androidx_test_runner = "1.5.2"
test_espresso = "3.5.1"
test_hamcrest = "2.2"
test_junit = "4.13.2"
test_mockk = "1.13.8"
test_robolectric = "4.11.1"
test_rxidler = "0.11.0"
log4j = "2.0.9"

junit = "1.1.5"

[libraries]

# Architecture
architecture_components_base = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "androidx_lifecycle_extensions" }
architecture_components_livedata_core = { module = "androidx.lifecycle:lifecycle-livedata-core", version.ref = "androidx_lifecycle" }
architecture_components_livedata_ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx_lifecycle" }
architecture_components_lifecycle_compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "androidx_lifecycle" }
architecture_components_runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx_lifecycle" }
architecture_components_viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx_lifecycle" }
architecture_components_runtime_compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx_lifecycle" }

# Compose
compose_foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose_foundation" }
compose_material = { module = "androidx.compose.material:material", version.ref = "compose_material" }
compose_runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose_runtime_livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }

compose_ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose_ui_tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "compose" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "compose" }
lang_kotlin_collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinCollections" }
compose_constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayout" }
compose_activity = { module = "androidx.activity:activity-compose", version.ref = "compose_activity" }

# Injection
injection_dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
injection_dagger_processor = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# Lang
lang_coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
lang_coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
lang_kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
log4j = { module = "org.slf4j:slf4j-simple", version.ref = "log4j" }


# Support
support_activity = { module = "androidx.activity:activity-ktx", version.ref = "androidx_activity" }
support_androidcorektx = { module = "androidx.core:core-ktx", version.ref = "androidx_core_ktx" }
support_annotations = { module = "androidx.annotation:annotation", version.ref = "androidx_annotation" }
support_appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx_appcompat" }
support_cardview = { module = "androidx.cardview:cardview", version.ref = "androidx_cardview" }
support_constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx_constraintlayout" }
support_design = { module = "com.google.android.material:material", version.ref = "android_material" }
support_fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx_fragment" }
support_recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx_recyclerview" }

# Test
test_compose = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
test_espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "test_espresso" }
test_espresso_contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "test_espresso" }
test_espresso_intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "test_espresso" }
test_espresso_web = { module = "androidx.test.espresso:espresso-web", version.ref = "test_espresso" }
test_hamcrest = { module = "org.hamcrest:hamcrest-core", version.ref = "test_hamcrest" }
test_junit = { module = "junit:junit", version.ref = "test_junit" }
test_rxidler = { module = "com.squareup.rx.idler:rx2-idler", version.ref = "test_rxidler" }
test_support_core = { module = "androidx.test:core-ktx", version.ref = "test_androidx_test" }
test_support_ext = { module = "androidx.test.ext:junit-ktx", version.ref = "test_androidx_test_junit" }
test_support_orchestrator = { module = "androidx.test:orchestrator", version.ref = "test_androidx_orchestrator" }
test_support_rules = { module = "androidx.test:rules", version.ref = "test_androidx_test" }
test_support_runner = { module = "androidx.test:runner", version.ref = "test_androidx_test_runner" }
test_kotlintestjunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
test_mockk = { module = "io.mockk:mockk", version.ref = "test_mockk" }
test_mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
test_robolectric = { module = "org.robolectric:robolectric", version.ref = "test_robolectric" }

# Dependencies of the included buidsystem/plugins
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
axion-gradlePlugin = { group = "pl.allegro.tech.build", name = "axion-release-plugin", version.ref = "axion" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "desugarJdkLibs" }
junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" }
